{"version":3,"sources":["components/Profile/Profile.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Statistics/Statistics.module.css","components/FriendListItem/FriendListItem.module.css","components/FriendList/FriendList.module.css","components/Profile/Profile.js","helper/randomColor.js","components/Statistics/Statistics.js","components/FriendListItem/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","components/App.js","reportWebVitals.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","followers","likes","views","className","s","profile","description","src","alt","statsItem","label","quantity","randomColor","color","Math","round","random","Statistics","title","statistics","statList","map","id","percentage","item","style","backgroundColor","FriendListItem","isOnline","online","offline","width","FriendList","friends","friendList","friend","TransactionHistory","items","transactionHistory","amount","currency","type","st","App","user","statisticalData","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bd664f5e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__yOnny\",\"description\":\"Profile_description__j4FWD\",\"avatar\":\"Profile_avatar__uJUmO\",\"stats\":\"Profile_stats__1q88v\",\"statsItem\":\"Profile_statsItem__oJ4Bc\",\"label\":\"Profile_label__1yR5k\",\"quantity\":\"Profile_quantity__3RBT4\",\"name\":\"Profile_name__3kaZn\",\"tag\":\"Profile_tag__3cmET\",\"location\":\"Profile_location__33MxX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__1ueds\",\"title\":\"TransactionHistory_title__1fu85\",\"box\":\"TransactionHistory_box__2pJFo\",\"item\":\"TransactionHistory_item__3HypR\",\"st\":\"TransactionHistory_st__AeuT6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__12Opn\",\"title\":\"Statistics_title__3slIX\",\"statList\":\"Statistics_statList__18QtD\",\"item\":\"Statistics_item__LyfDT\",\"label\":\"Statistics_label__aRn12\",\"percentage\":\"Statistics_percentage__1JDRv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendListItem_item__2yz4y\",\"status\":\"FriendListItem_status__1xaAx\",\"online\":\"FriendListItem_online__2yB_P FriendListItem_status__1xaAx\",\"offline\":\"FriendListItem_offline__1Nl7I FriendListItem_status__1xaAx\",\"avatar\":\"FriendListItem_avatar__1Jhlx\",\"name\":\"FriendListItem_name__1_49e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__12bBs\"};","import PropTypes from \"prop-types\";\r\nimport s from \"./Profile.module.css\";\r\n\r\nconst Profile = ({ name, tag, location, avatar, stats }) => {\r\n  const { followers, likes, views } = stats;\r\n  //   console.log(stats);\r\n\r\n  return (\r\n    <div className={s.profile}>\r\n      <div className={s.description}>\r\n        <img src={avatar} alt=\"Аватар пользователя\" className={s.avatar} />\r\n        <p className={s.name}>{name}</p>\r\n        <p className={s.tag}>@{tag}</p>\r\n        <p className={s.location}>{location}</p>\r\n      </div>\r\n\r\n      <ul className={s.stats}>\r\n        <li className={s.statsItem}>\r\n          <span className={s.label}>Followers</span>\r\n          <span className={s.quantity}>{followers}</span>\r\n        </li>\r\n        <li className={s.statsItem}>\r\n          <span className={s.label}>Views</span>\r\n          <span className={s.quantity}>{views}</span>\r\n        </li>\r\n        <li className={s.statsItem}>\r\n          <span className={s.label}>Likes</span>\r\n          <span className={s.quantity}>{likes}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  avatar: PropTypes.string.isRequired,\r\n  stats: PropTypes.shape({\r\n    followers: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired,\r\n    likes: PropTypes.number.isRequired,\r\n  }),\r\n};\r\n\r\nexport default Profile;\r\n","function randomColor(color) {\r\n  color =\r\n    \"rgb(\" +\r\n    Math.round(Math.random() * 255) +\r\n    \",\" +\r\n    Math.round(Math.random() * 255) +\r\n    \",\" +\r\n    Math.round(Math.random() * 255) +\r\n    \")\";\r\n\r\n  return color;\r\n}\r\n\r\nexport default randomColor;\r\n","import PropTypes from \"prop-types\";\r\nimport randomColor from \"../../helper/randomColor\";\r\nimport s from \"./Statistics.module.css\";\r\n// console.log(s);\r\n\r\nfunction Statistics({ title, stats }) {\r\n  //   console.log(stats);\r\n\r\n  return (\r\n    <section className={s.statistics}>\r\n      {title && <h2 className={s.title}>{title}</h2>}\r\n\r\n      <ul className={s.statList}>\r\n        {stats.map(({ id, label, percentage }) => {\r\n          //   console.log(percentage);\r\n          return (\r\n            <li\r\n              className={s.item}\r\n              style={{ backgroundColor: randomColor() }}\r\n              key={id}\r\n            >\r\n              <span className={s.label}>{label}</span>\r\n              <span className={s.percentage}>{percentage}%</span>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </section>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    })\r\n  ),\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Statistics;\r\n","import PropTypes, { bool } from \"prop-types\";\r\nimport s from \"./FriendListItem.module.css\";\r\n\r\nfunction FriendListItem({ avatar, name, isOnline }) {\r\n  return (\r\n    <li className={s.item}>\r\n      <span className={isOnline ? s.online : s.offline}></span>\r\n      <img className={s.avatar} src={avatar} alt={name} width=\"48\" />\r\n      <p className={s.name}>{name}</p>\r\n    </li>\r\n  );\r\n}\r\nFriendListItem.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      avatar: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      isOnline: bool.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default FriendListItem;\r\n","import PropTypes from \"prop-types\";\r\nimport FriendListItem from \"../FriendListItem/FriendListItem\";\r\nimport s from \"./FriendList.module.css\";\r\n\r\nfunction FriendList({ friends }) {\r\n  return (\r\n    <ul className={s.friendList}>\r\n      {friends.map((friend) => {\r\n        return (\r\n          <FriendListItem\r\n            key={friend.id}\r\n            avatar={friend.avatar}\r\n            name={friend.name}\r\n            isOnline={friend.isOnline}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default FriendList;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./TransactionHistory.module.css\";\r\n\r\nfunction TransactionHistory({ items }) {\r\n  // console.log(items);\r\n\r\n  return (\r\n    <table className={s.transactionHistory}>\r\n      <thead>\r\n        <tr>\r\n          <th className={s.title}>Type</th>\r\n          <th className={s.title}>Amount</th>\r\n          <th className={s.title}>Currency</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody className=\"box\">\r\n        {items.map(({ amount, currency, type, id }) => {\r\n          return (\r\n            <tr className={s.st} key={id}>\r\n              <td className={s.item}>{type}</td>\r\n              <td className={s.item}>{amount}</td>\r\n              <td className={s.item}>{currency}</td>\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      type: PropTypes.string.isRequired,\r\n      amount: PropTypes.string.isRequired,\r\n      currency: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import Profile from \"./Profile/Profile\";\r\nimport Statistics from \"./Statistics/Statistics\";\r\nimport FriendList from \"./FriendList/FriendList\";\r\nimport TransactionHistory from \"./TransactionHistory/TransactionHistory\";\r\nimport user from \"../user.json\";\r\nimport statisticalData from \"../statistical-data.json\";\r\nimport friends from \"../friends.json\";\r\nimport transactions from \"../transactions.json\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"container\">\r\n      <Profile\r\n        name={user.name}\r\n        tag={user.tag}\r\n        location={user.location}\r\n        avatar={user.avatar}\r\n        stats={user.stats}\r\n      />\r\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\r\n      <FriendList friends={friends} />\r\n      <TransactionHistory items={transactions} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}