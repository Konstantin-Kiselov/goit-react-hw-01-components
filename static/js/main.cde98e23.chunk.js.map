{"version":3,"sources":["components/Profile.js","components/Statistics.js","components/FriendList.js","components/TransactionHistory.js","App.js","reportWebVitals.js","index.js"],"names":["Profile","name","tag","location","avatar","stats","followers","likes","views","className","src","alt","randomColor","color","Math","round","random","Statistics","title","map","id","label","percentage","style","backgroundColor","FriendList","friends","isOnline","disabled","width","TransactionHistory","items","amount","currency","type","App","user","statisticalData","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cde98e23.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\n\nconst Profile = ({ name, tag, location, avatar, stats }) => {\n  const { followers, likes, views } = stats;\n  //   console.log(stats);\n\n  return (\n    <div className=\"profile\">\n      <div className=\"description\">\n        <img src={avatar} alt=\"Аватар пользователя\" className=\"avatar\" />\n        <p className=\"name\">{name}</p>\n        <p className=\"tag\">@{tag}</p>\n        <p className=\"location\">{location}</p>\n      </div>\n\n      <ul className=\"stats\">\n        <li className=\"stats-item list\">\n          <span className=\"label\">Followers</span>\n          <span className=\"quantity\">{followers}</span>\n        </li>\n        <li className=\"stats-item list\">\n          <span className=\"label\">Views</span>\n          <span className=\"quantity\">{views}</span>\n        </li>\n        <li className=\"stats-item list\">\n          <span className=\"label\">Likes</span>\n          <span className=\"quantity\">{likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  stats: PropTypes.shape({\n    followers: PropTypes.number.isRequired,\n    views: PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired,\n  }),\n};\n\nexport default Profile;\n","import PropTypes from \"prop-types\";\n\nfunction Statistics({ title, stats }) {\n  //   console.log(stats);\n\n  return (\n    <section className=\"statistics\">\n      {title && <h2 className=\"title\">{title}</h2>}\n\n      <ul className=\"stat-list\">\n        {stats.map(({ id, label, percentage }) => {\n          //   console.log(percentage);\n          return (\n            <li\n              className=\"item\"\n              style={{ backgroundColor: randomColor() }}\n              key={id}\n            >\n              <span className=\"label\">{label}</span>\n              <span className=\"percentage\">{percentage}</span>\n            </li>\n          );\n        })}\n      </ul>\n    </section>\n  );\n}\n\nfunction randomColor(color) {\n  color =\n    \"rgb(\" +\n    Math.round(Math.random() * 255) +\n    \",\" +\n    Math.round(Math.random() * 255) +\n    \",\" +\n    Math.round(Math.random() * 255) +\n    \")\";\n\n  return color;\n}\n\nStatistics.propTypes = {\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default Statistics;\n","import PropTypes, { bool } from \"prop-types\";\n\nfunction FriendList({ friends }) {\n  //   console.log(friends);\n  return (\n    <ul className=\"friend-list\">\n      {friends.map(({ id, avatar, name, isOnline }) => {\n        return (\n          <li className=\"item\" key={id}>\n            <span className=\"status\" disabled={isOnline}></span>\n            <img className=\"avatar\" src={avatar} alt={name} width=\"48\" />\n            <p className=\"name\">{name}</p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      avatar: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      isOnline: bool.isRequired,\n    })\n  ),\n};\n\nexport default FriendList;\n","import PropTypes from \"prop-types\";\n\nfunction TransactionHistory({ items }) {\n  // console.log(items);\n\n  return (\n    <table className=\"transaction-history\">\n      <thead>\n        <tr>\n          <th className=\"title\">Type</th>\n          <th className=\"title\">Amount</th>\n          <th className=\"title\">Currency</th>\n        </tr>\n      </thead>\n\n      <tbody className=\"box\">\n        {items.map(({ amount, currency, type, id }) => {\n          return (\n            <tr key={id}>\n              <td className=\"item\">{type}</td>\n              <td className=\"item\">{amount}</td>\n              <td className=\"item\">{currency}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n}\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default TransactionHistory;\n","// import logo from \"./logo.svg\";\nimport Profile from \"./components/Profile\";\nimport Statistics from \"./components/Statistics\";\nimport FriendList from \"./components/FriendList\";\nimport TransactionHistory from \"./components/TransactionHistory\";\nimport user from \"./user.json\";\nimport statisticalData from \"./statistical-data.json\";\nimport friends from \"./friends.json\";\nimport transactions from \"./transactions.json\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistics title=\"Upload stats\" stats={statisticalData} />;\n      <FriendList friends={friends} />,\n      <TransactionHistory items={transactions} />,\n    </div>\n  );\n\n  // ======================================================\n  // return (\n  //   <div className=\"App\">\n  //     <header className=\"App-header\">\n  //       <img src={logo} className=\"App-logo\" alt=\"logo\" />\n  //       <p>\n  //         Edit <code>src/App.js</code> and save to reload.\n  //       </p>\n  //       <a\n  //         className=\"App-link\"\n  //         href=\"https://reactjs.org\"\n  //         target=\"_blank\"\n  //         rel=\"noopener noreferrer\"\n  //       >\n  //         Learn React\n  //       </a>\n  //     </header>\n  //   </div>\n  // );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}