{"version":3,"sources":["components/Profile.js","components/Statistics.js","components/FriendList.js","components/TransactionHistory.js","App.js","reportWebVitals.js","index.js"],"names":["Profile","name","tag","location","avatar","stats","followers","likes","views","className","src","alt","Statistics","title","map","id","label","percentage","FriendList","friends","isOnline","disabled","width","TransactionHistory","items","amount","currency","type","App","user","statisticalData","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gwGA6CeA,EA3CC,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,IAAKC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,MACtCC,EAA4BD,EAA5BC,UAAWC,EAAiBF,EAAjBE,MAAOC,EAAUH,EAAVG,MAG1B,OACE,sBAAKC,UAAU,UAAf,UACE,sBAAKA,UAAU,cAAf,UACE,qBAAKC,IAAKN,EAAQO,IAAI,gHAAsBF,UAAU,WACtD,mBAAGA,UAAU,OAAb,SAAqBR,IACrB,oBAAGQ,UAAU,MAAb,cAAqBP,KACrB,mBAAGO,UAAU,WAAb,SAAyBN,OAG3B,qBAAIM,UAAU,QAAd,UACE,+BACE,sBAAMA,UAAU,QAAhB,uBACA,sBAAMA,UAAU,WAAhB,SAA4BH,OAE9B,+BACE,sBAAMG,UAAU,QAAhB,mBACA,sBAAMA,UAAU,WAAhB,SAA4BD,OAE9B,+BACE,sBAAMC,UAAU,QAAhB,mBACA,sBAAMA,UAAU,WAAhB,SAA4BF,cCQvBK,MAhCf,YAAuC,IAAjBC,EAAgB,EAAhBA,MAAOR,EAAS,EAATA,MAG3B,OACE,0BAASI,UAAU,aAAnB,UACGI,GAAS,oBAAIJ,UAAU,QAAd,SAAuBI,IAEjC,oBAAIJ,UAAU,YAAd,SACGJ,EAAMS,KAAI,YAAgC,IAA7BC,EAA4B,EAA5BA,GAAIC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WAEvB,OACE,qBAAIR,UAAU,OAAd,UACE,sBAAMA,UAAU,QAAhB,SAAyBO,IACzB,sBAAMP,UAAU,aAAhB,SAA8BQ,MAFNF,YCiBvBG,MA5Bf,YAAkC,IAAZC,EAAW,EAAXA,QAEpB,OACE,oBAAIV,UAAU,cAAd,SACGU,EAAQL,KAAI,YAAqC,IAAlCC,EAAiC,EAAjCA,GAAIX,EAA6B,EAA7BA,OAAQH,EAAqB,EAArBA,KAAMmB,EAAe,EAAfA,SAChC,OACE,qBAAIX,UAAU,OAAd,UACE,sBAAMA,UAAU,SAASY,SAAUD,IACnC,qBAAKX,UAAU,SAASC,IAAKN,EAAQO,IAAKV,EAAMqB,MAAM,OACtD,mBAAGb,UAAU,OAAb,SAAqBR,MAHGc,SCiCrBQ,MAvCf,YAAwC,IAAVC,EAAS,EAATA,MAG5B,OACE,wBAAOf,UAAU,sBAAjB,UACE,gCACE,+BACE,sCACA,wCACA,+CAIJ,gCACGe,EAAMV,KAAI,YAAqC,IAAlCW,EAAiC,EAAjCA,OAAQC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,KAAMZ,EAAS,EAATA,GACpC,OACE,+BACE,6BAAKY,IACL,6BAAKF,IACL,6BAAKC,MAHEX,Y,4BC6BNa,MArCf,WACE,OACE,gCACE,cAAC,EAAD,CACE3B,KAAM4B,EAAK5B,KACXC,IAAK2B,EAAK3B,IACVC,SAAU0B,EAAK1B,SACfC,OAAQyB,EAAKzB,OACbC,MAAOwB,EAAKxB,QAEd,cAAC,EAAD,CAAYQ,MAAM,eAAeR,MAAOyB,IAR1C,IASE,cAAC,EAAD,CAAYX,QAASA,IATvB,IAUE,cAAC,EAAD,CAAoBK,MAAOO,IAV7B,QCAWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.324b4df0.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\n\r\nconst Profile = ({ name, tag, location, avatar, stats }) => {\r\n  const { followers, likes, views } = stats;\r\n  //   console.log(stats);\r\n\r\n  return (\r\n    <div className=\"profile\">\r\n      <div className=\"description\">\r\n        <img src={avatar} alt=\"Аватар пользователя\" className=\"avatar\" />\r\n        <p className=\"name\">{name}</p>\r\n        <p className=\"tag\">@{tag}</p>\r\n        <p className=\"location\">{location}</p>\r\n      </div>\r\n\r\n      <ul className=\"stats\">\r\n        <li>\r\n          <span className=\"label\">Followers</span>\r\n          <span className=\"quantity\">{followers}</span>\r\n        </li>\r\n        <li>\r\n          <span className=\"label\">Views</span>\r\n          <span className=\"quantity\">{views}</span>\r\n        </li>\r\n        <li>\r\n          <span className=\"label\">Likes</span>\r\n          <span className=\"quantity\">{likes}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  avatar: PropTypes.string.isRequired,\r\n  stats: PropTypes.shape({\r\n    followers: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired,\r\n    likes: PropTypes.number.isRequired,\r\n  }),\r\n};\r\n\r\nexport default Profile;\r\n","import PropTypes from \"prop-types\";\r\n\r\nfunction Statistics({ title, stats }) {\r\n  //   console.log(stats);\r\n\r\n  return (\r\n    <section className=\"statistics\">\r\n      {title && <h2 className=\"title\">{title}</h2>}\r\n\r\n      <ul className=\"stat-list\">\r\n        {stats.map(({ id, label, percentage }) => {\r\n          //   console.log(percentage);\r\n          return (\r\n            <li className=\"item\" key={id}>\r\n              <span className=\"label\">{label}</span>\r\n              <span className=\"percentage\">{percentage}</span>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </section>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default Statistics;\r\n","import PropTypes, { bool } from \"prop-types\";\r\n\r\nfunction FriendList({ friends }) {\r\n  //   console.log(friends);\r\n  return (\r\n    <ul className=\"friend-list\">\r\n      {friends.map(({ id, avatar, name, isOnline }) => {\r\n        return (\r\n          <li className=\"item\" key={id}>\r\n            <span className=\"status\" disabled={isOnline}></span>\r\n            <img className=\"avatar\" src={avatar} alt={name} width=\"48\" />\r\n            <p className=\"name\">{name}</p>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      avatar: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      isOnline: bool.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default FriendList;\r\n","import PropTypes from \"prop-types\";\r\n\r\nfunction TransactionHistory({ items }) {\r\n  // console.log(items);\r\n\r\n  return (\r\n    <table className=\"transaction-history\">\r\n      <thead>\r\n        <tr>\r\n          <th>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {items.map(({ amount, currency, type, id }) => {\r\n          return (\r\n            <tr key={id}>\r\n              <td>{type}</td>\r\n              <td>{amount}</td>\r\n              <td>{currency}</td>\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      type: PropTypes.string.isRequired,\r\n      amount: PropTypes.string.isRequired,\r\n      currency: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default TransactionHistory;\r\n","// import logo from \"./logo.svg\";\nimport Profile from \"./components/Profile\";\nimport Statistics from \"./components/Statistics\";\nimport FriendList from \"./components/FriendList\";\nimport TransactionHistory from \"./components/TransactionHistory\";\nimport user from \"./user.json\";\nimport statisticalData from \"./statistical-data.json\";\nimport friends from \"./friends.json\";\nimport transactions from \"./transactions.json\";\n\nfunction App() {\n  return (\n    <div>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistics title=\"Upload stats\" stats={statisticalData} />;\n      <FriendList friends={friends} />,\n      <TransactionHistory items={transactions} />,\n    </div>\n  );\n\n  // ======================================================\n  // return (\n  //   <div className=\"App\">\n  //     <header className=\"App-header\">\n  //       <img src={logo} className=\"App-logo\" alt=\"logo\" />\n  //       <p>\n  //         Edit <code>src/App.js</code> and save to reload.\n  //       </p>\n  //       <a\n  //         className=\"App-link\"\n  //         href=\"https://reactjs.org\"\n  //         target=\"_blank\"\n  //         rel=\"noopener noreferrer\"\n  //       >\n  //         Learn React\n  //       </a>\n  //     </header>\n  //   </div>\n  // );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}